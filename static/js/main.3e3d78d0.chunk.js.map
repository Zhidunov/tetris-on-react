{"version":3,"sources":["components/styles/StyledCell.js","tetrominos.js","components/Cell.jsx","components/styles/StyledStage.js","components/Stage.jsx","components/styles/StyledDisplay.js","components/Display.jsx","components/styles/StyledStartButton.js","components/StartButton.jsx","gameHelpers.js","components/styles/StyledTetrisWrapper.js","components/styles/StyledTetris.js","hooks/useStage.js","hooks/useGameStatus.js","components/Tetris.jsx","hooks/usePlayer.js","hooks/useInterval.js","App.js","serviceWorker.js","index.js"],"names":["StyledCell","styled","div","props","color","type","TETROMINOS","0","shape","I","J","L","O","S","T","Z","randomTetromino","randTetromino","Math","floor","random","length","React","memo","StyledStage","height","width","Stage","stage","map","row","cell","x","key","StyledDisplay","gameOver","Display","text","StyledStartButton","StartButton","callback","onClick","createStage","Array","from","fill","checkCollision","player","moveX","moveY","y","tetromino","position","StyledTetrisWrapper","StyledTetris","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","forEach","value","collided","reduce","accumulator","findIndex","prev","unshift","push","sweepRows","Tetris","dropTime","setDropTime","setGameOver","setPlayer","rotate","matrix","dir","rotatedTetro","_","index","col","reverse","useCallback","STAGE_WIDTH","clonedPlayer","JSON","parse","stringify","offset","usePlayer","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","console","log","movePlayer","drop","move","keyCode","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","onKeyUp","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3e3d78d0.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const StyledCell = styled.div`\n    width: auto;\n    background: rgba(${props => props.color}, 0.8);\n    border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\n    border-bottom-color: rgba(${props => props.color}, 0.1);\n    border-right-color: rgba(${props => props.color}, 1);\n    border-top-color: rgba(${props => props.color}, 1);\n    border-left-color: rgba(${props => props.color}, 0.3);\n`","export const TETROMINOS = {\n    0: { shape: [[0]], color: '0, 0, 0'},\n    I: {\n        shape: [\n            [0, 'I', 0, 0],\n            [0, 'I', 0, 0],\n            [0, 'I', 0, 0],\n            [0, 'I', 0, 0]\n        ],\n        color: '80, 227, 230'\n    },\n    J: {\n        shape: [\n            [0, 'J', 0],\n            [0, 'J', 0],\n            ['J', 'J', 0]\n        ],\n        color: '36, 95, 223'\n    },\n    L: {\n        shape: [\n            [0, 'L', 0],\n            [0, 'L', 0],\n            [0, 'L', 'L']\n        ],\n        color: '223, 173, 36'\n    },\n    O: {\n        shape: [\n            ['O', 'O'],\n            ['O', 'O']\n        ],\n        color: '223, 217, 36'\n    },\n    S: {\n        shape: [\n            [0, 'S', 'S'],\n            ['S', 'S', 0],\n            [0, 0, 0]\n        ],\n        color: '48, 211, 56'\n    },\n    T: {\n        shape: [\n            [0, 0, 0],\n            ['T', 'T', 'T'],\n            [0, 'T', 0]\n        ],\n        color: '132, 61, 198'\n    },\n    Z: {\n        shape: [\n            ['Z', 'Z', 0],\n            [0, 'Z', 'Z'],\n            [0, 0, 0]\n        ],\n        color: '227, 78, 78'\n    }\n}\n\nexport const randomTetromino = () => {\n    const tetrominos = 'IJLOSTZ';\n    const randTetromino = tetrominos[Math.floor(Math.random() * tetrominos.length)];\n    return TETROMINOS[randTetromino];\n}","import React from 'react';\nimport { StyledCell } from './styles/StyledCell';\nimport { TETROMINOS } from '../tetrominos';\n\nconst Cell = ({type}) => {\n    return (\n        <StyledCell type={type} color={TETROMINOS[type].color} />\n    );\n}\n\nexport default React.memo(Cell);","import styled from 'styled-components';\n\nexport const StyledStage = styled.div`\n    display: grid;\n    grid-template-rows: repeat(\n        ${props => props.height},\n        calc(25vw / ${props => props.width})\n    );\n    grid-template-columns: repeat(${props => props.width}, 1fr);\n    grid-gap: 1px;\n    border: 2px solid #333;\n    width: 100%;\n    max-width: 25vw;\n    background: #111;\n`","import React from 'react';\nimport Cell from './Cell';\nimport { StyledStage } from './styles/StyledStage';\n\nconst Stage = ({ stage }) => {\n    return (\n        <StyledStage width={stage[0].length} height={stage.length} >\n            {stage.map(row => row.map((cell, x)=> (<Cell key={x} type={cell[0]} />)))}\n        </StyledStage>\n    );\n}\n\nexport default Stage;","import styled from 'styled-components';\n\nexport const StyledDisplay = styled.div`\n    box-sizing: border-box;\n    display: flex;\n    align-items: center;\n    margin: 0 0 20px 0;\n    padding: 20px;\n    border: 4px solid #333;\n    min-height: 30px;\n    width: 100%;\n    border-radius: 20px;\n    color: ${props => (props.gameOver ? 'red' : '#999')};\n    background: #000;\n    font-size: 1rem;\n`","import React from 'react';\nimport { StyledDisplay } from './styles/StyledDisplay';\n\nconst Display = ({ gameOver, text }) => {\n    return (\n        <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\n    );\n}\n\nexport default Display;","import styled from 'styled-components';\n\nexport const StyledStartButton = styled.div`\n    box-sizing: border-box;\n    margin: 0 0 20px 0;\n    padding: 20px;\n    min-height: 30px;\n    width: 100%;\n    border-radius: 20px;\n    border: none;\n    color: white;\n    background: #333;\n    font-size: 1.2rem;\n    outline: none;\n    cursor: pointer;\n    text-align: center;\n`","import React from 'react';\nimport { StyledStartButton } from './styles/StyledStartButton';\n\nconst StartButton = ({ callback }) => {\n    return (\n        <StyledStartButton onClick={callback} >Start Game</StyledStartButton>\n    );\n}\n\nexport default StartButton;","export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () => {\n  return Array.from(Array(STAGE_HEIGHT), () => {\n    return new Array(STAGE_WIDTH).fill([0, \"clear\"]);\n  });\n};\n\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n  for (let y = 0; y < player.tetromino.length; y += 1) {\n    for (let x = 0; x < player.tetromino[y].length; x += 1) {\n      if (player.tetromino[y][x] !== 0) {\n        if (\n          !stage[y + player.position.y + moveY] ||\n          !stage[y + player.position.y + moveY][\n            x + player.position.x + moveX\n          ] ||\n          stage[y + player.position.y + moveY][\n            x + player.position.x + moveX\n          ][1] !== \"clear\"\n        ) {\n          return true;\n        }\n      }\n    }\n  }\n};\n","import styled from \"styled-components\";\n\nexport const StyledTetrisWrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-color: #222;\n  background-size: cover;\n  overflow: hidden;\n`;\n","import styled from \"styled-components\";\n\nexport const StyledTetris = styled.div`\n  display: flex;\n  align-items: flex-start;\n  padding: 40px;\n  margin: 0 auto;\n  max-width: 900px;\n\n  aside {\n      width: 100%;\n      max-width: 200px;\n      display: block;\n      padding: 0 20px;\n  }\n`;\n","import { useState, useEffect } from \"react\";\nimport { createStage } from \"../gameHelpers\";\n\nexport const useStage = (player, resetPlayer) => {\n  let [stage, setStage] = useState(createStage());\n  let [rowsCleared, setRowsCleared] = useState(0);\n\n  useEffect(() => {\n    setRowsCleared(0);\n\n    const sweepRows = (newStage) =>\n      newStage.reduce((accumulator, row) => {\n        if (row.findIndex((cell) => cell[0] === 0) === -1) {\n          setRowsCleared((prev) => prev + 1);\n          accumulator.unshift(new Array(newStage[0].length).fill([0, \"clear\"]));\n          return accumulator;\n        }\n        accumulator.push(row);\n        return accumulator;\n      }, []);\n\n    const updateStage = (prevStage) => {\n      const newStage = prevStage.map((row) =>\n        row.map((cell) => (cell[1] === \"clear\" ? [0, \"clear\"] : cell))\n      );\n\n      player.tetromino.forEach((row, y) => {\n        row.forEach((value, x) => {\n          if (value !== 0) {\n            newStage[y + player.position.y][x + player.position.x] = [\n              value,\n              `${player.collided ? \"merged\" : \"clear\"}`,\n            ];\n          }\n        });\n      });\n\n      if (player.collided) {\n        resetPlayer();\n        return sweepRows(newStage);\n      }\n\n      return newStage;\n    };\n\n    setStage((prev) => updateStage(prev));\n  }, [player, resetPlayer]);\n\n  return [stage, setStage, rowsCleared];\n};\n","import { useState, useEffect, useCallback } from \"react\";\n\nexport const useGameStatus = (rowsCleared) => {\n  const [score, setScore] = useState(0);\n  const [rows, setRows] = useState(0);\n  const [level, setLevel] = useState(0);\n\n  const linePoints = [40, 100, 300, 1200];\n\n  const calcScore = useCallback(() => {\n    if (rowsCleared > 0) {\n      setScore((prev) => prev + linePoints[rowsCleared - 1] * (level + 1));\n      setRows((prev) => prev + rowsCleared);\n    }\n  }, [level, linePoints, rowsCleared]);\n\n  useEffect(() => {\n    calcScore();\n  }, [calcScore, rowsCleared, score])\n\n  return [score, setScore, rows, setRows, level, setLevel];\n\n};\n","import React, { useState } from \"react\";\nimport Stage from \"./Stage\";\nimport Display from \"./Display\";\nimport StartButton from \"./StartButton\";\nimport { createStage, checkCollision } from \"../gameHelpers\";\nimport { StyledTetrisWrapper } from \"./styles/StyledTetrisWrapper\";\nimport { StyledTetris } from \"./styles/StyledTetris\";\nimport { usePlayer } from \"../hooks/usePlayer\";\nimport { useStage } from \"../hooks/useStage\";\nimport { useInterval } from \"../hooks/useInterval\";\nimport { useGameStatus } from \"../hooks/useGameStatus\";\n\nconst Tetris = () => {\n  let [dropTime, setDropTime] = useState(null);\n  let [gameOver, setGameOver] = useState(false);\n\n  let [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n  let [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n\n  let [score, setScore, rows, setRows, level, setLevel] = useGameStatus(\n    rowsCleared\n  );\n\n  console.log(\"re-render\");\n\n  const movePlayer = (dir) => {\n    if (!checkCollision(player, stage, { x: dir, y: 0 })) {\n      updatePlayerPos({ x: dir, y: 0 });\n    }\n  };\n\n  const startGame = () => {\n    setStage(createStage());\n    setDropTime(1000);\n    resetPlayer();\n    setGameOver(false);\n    setScore(0);\n    setRows(0);\n    setLevel(0);\n  };\n\n  const drop = () => {\n\n    if(rows > (level + 1) * 10) {\n      setLevel(prev => prev + 1);\n      setDropTime(1000 / (level + 1) + 200);\n    }\n\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\n      updatePlayerPos({ x: 0, y: 1, collided: false });\n    } else {\n      if (player.position.y < 1) {\n        console.log(\"Game Over!\");\n        setGameOver(true);\n        setDropTime(null);\n      }\n      updatePlayerPos({ x: 0, y: 0, collided: true });\n    }\n  };\n\n  const dropPlayer = () => {\n    console.log(\"interval off\");\n    setDropTime(null);\n    drop();\n  };\n\n  const move = ({ keyCode }) => {\n    if (!gameOver) {\n      if (keyCode === 37) {\n        movePlayer(-1);\n      } else if (keyCode === 39) {\n        movePlayer(1);\n      } else if (keyCode === 40) {\n        dropPlayer();\n      } else if (keyCode === 38) {\n        playerRotate(stage, 1);\n      }\n    }\n  };\n\n  const keyUp = ({ keyCode }) => {\n    if (!gameOver) {\n      if (keyCode === 40) {\n        console.log(\"interval on\");\n        setDropTime(1000 / (level + 1) + 200);\n      }\n    }\n  };\n\n  useInterval(() => {\n    drop();\n  }, dropTime);\n\n  return (\n    <StyledTetrisWrapper\n      role=\"button\"\n      tabIndex=\"0\"\n      onKeyDown={(e) => move(e)}\n      onKeyUp={keyUp}\n    >\n      <StyledTetris>\n        <Stage stage={stage} />\n        <aside>\n          {gameOver ? (\n            <Display gameOver={gameOver} text=\"Game Over\" />\n          ) : (\n            <div>\n              <Display text={`Score: ${score}`} />\n              <Display text={`Rows: ${rows}`} />\n              <Display text={`Level: ${level}`} />\n            </div>\n          )}\n          <StartButton callback={startGame} />\n        </aside>\n      </StyledTetris>\n    </StyledTetrisWrapper>\n  );\n};\n\nexport default Tetris;\n","import { useState, useCallback } from \"react\";\nimport { randomTetromino, TETROMINOS } from \"../tetrominos\";\nimport { STAGE_WIDTH, checkCollision } from \"../gameHelpers\";\n\nexport const usePlayer = () => {\n  let [player, setPlayer] = useState({\n    position: { x: 0, y: 0 },\n    tetromino: TETROMINOS[0].shape,\n    collided: false\n  });\n\n  const rotate = (matrix, dir) => {\n    let rotatedTetro = matrix.map((_, index) => matrix.map(col => col[index]));\n    if(dir > 0) return rotatedTetro.map(row => row.reverse());\n    return rotatedTetro.reverse();\n  }\n\n  const playerRotate = (stage, dir) => {\n    let clonedPlayer = JSON.parse(JSON.stringify(player));\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\n\n    const position = clonedPlayer.position.x;\n    let offset = 1;\n    while(checkCollision(clonedPlayer, stage, { x: 0, y: 0 })){\n      clonedPlayer.position.x += offset;\n      offset = -(offset + (offset > 0 ? 1 : -1));\n      if (offset > clonedPlayer.tetromino[0].length) {\n        rotate(clonedPlayer.tetromino, -dir);\n        clonedPlayer.position.x = position;\n        return;\n      }\n    }\n\n    setPlayer(clonedPlayer);\n  }\n\n  const updatePlayerPos = ({ x, y, collided }) => {\n    setPlayer(prev => ({\n        ...prev,\n        position: { x: (prev.position.x += x), y: (prev.position.y += y) },\n        collided\n    }));\n  };\n\n  const resetPlayer = useCallback(() => {\n      setPlayer({\n        position: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n        tetromino: randomTetromino().shape,\n        collided: false\n      })\n  }, [])\n\n  return [player, updatePlayerPos, resetPlayer, playerRotate];\n};\n","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay){\n    const savedCallback = useRef();\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n        if (delay !== null) {\n            const id = setInterval(tick, delay);\n            return () => {\n                clearInterval(id);\n            };\n        }\n    }, [delay]);\n}","import React from 'react';\nimport Tetris from './components/Tetris';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Tetris />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}